apiVersion: apps/v1
kind: Deployment
metadata:
  name: calibre-web
  labels:
    app.kubernetes.io/name: calibre-web
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: calibre-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calibre-web
      annotations:
        pre.hook.backup.velero.io/command: '["bash", "-o", "errexit", "-c", "for f in /config/app.db /config/gdrive.db /books/metadata.db; do sqlite3 $f \".backup $f.bak\"; done"]'
        pre.hook.backup.velero.io/timeout: 120s
        post.hook.backup.velero.io/command: '["bash", "-c", "for f in /config/app.db.bak /config/gdrive.db.bak /books/metadata.db.bak;  do rm $f; done"]'
    spec:
      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsGroup: 568
        runAsUser: 568
        fsGroupChangePolicy: OnRootMismatch
        fsGroup: 568
      containers:
        - name: calibre-web
          image: "ghcr.io/linuxserver/calibre-web:0.6.24"
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          # LinuxServer Images use supervisor. So need to modify our entry point.
          # However at least one possibly significant init command is missing here now: https://github.com/linuxserver/docker-calibre-web/blob/d457d97803a882f697c70beac119447a00ea9296/root/etc/s6-overlay/s6-rc.d/init-calibre-web-config/run#L5
          # TODO Maybe build our own container or fix the upstream one. Because replacing a file in an init script seems wrong.
          command:
            - python3
            - /app/calibre-web/cps.py
            - -o
            - /dev/stdout
          workingDir: /
          env:
            - name: TZ
              value: UTC
            # Need to set this manually because we skipped supervisor script...
            - name: CALIBRE_DBPATH
              value: /config
          ports:
            - name: http
              containerPort: 8083
              protocol: TCP
          volumeMounts:
            - name: books
              mountPath: /books
            - name: config
              mountPath: /config
          livenessProbe:
            tcpSocket:
              port: 8083
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8083
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8083
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: books
          persistentVolumeClaim:
            claimName: books
        - name: config
          persistentVolumeClaim:
            claimName: config