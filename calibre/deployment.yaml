apiVersion: apps/v1
kind: Deployment
metadata:
  name: calibre-web
  labels:
    app.kubernetes.io/name: calibre-web
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: calibre-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calibre-web
      annotations:
        # find /config/ /books/ -name '*.db' -exec  sqlite3 '{}' '.backup {}.bak' \;
        pre.hook.backup.velero.io/command: '["find", "/config/", "/books/", "-name", "*.db", "-exec", "sqlite3", "{}", ".backup {}.bak", "\;"]'
        pre.hook.backup.velero.io/timeout: 120s
        post.hook.backup.velero.io/command: '["find", "/config/", "/books/", "-name", "*.db.bak", "-delete"]'
    spec:
      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsGroup: 568
        runAsUser: 568
        fsGroupChangePolicy: OnRootMismatch
        fsGroup: 568
      containers:
        - name: calibre-web
          image: "ghcr.io/linuxserver/calibre-web:0.6.24"
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          env:
            - name: PGID
              value: "568"
            - name: PUID
              value: "568"
            - name: TZ
              value: UTC
          ports:
            - name: http
              containerPort: 8083
              protocol: TCP
          volumeMounts:
            - name: books
              mountPath: /books
            - name: config
              mountPath: /config
          livenessProbe:
            tcpSocket:
              port: 8083
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8083
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8083
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: books
          persistentVolumeClaim:
            claimName: books
        - name: config
          persistentVolumeClaim:
            claimName: config