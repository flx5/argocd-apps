# tenant-1-ca-certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: tenant-1-ca-certificate
  namespace: minio-tenant
spec:
  isCA: true
  commonName: tenant-1-ca
  secretName: tenant-1-ca-tls
  # TODO
  # This is an issue: https://cert-manager.io/docs/configuration/ca/#important-information
  # The certificate can outlive the root-ca. And cert-manager doesn't check that when issuing the cert.
  # Use very short livetimes here to mitigate for a while...
  # Can't be too short though otherwise minio operator complains about expiring certs...
  duration: 4320h # 180d
  renewBefore: 2160h # 90d
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: my-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
# tenant-1-ca-issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: tenant-1-ca-issuer
  namespace: minio-tenant
spec:
  ca:
    secretName: tenant-1-ca-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: tenant-certmanager-cert
  namespace: minio-tenant
spec:
  # TODO Maybe switch to https://openbao.org/docs/secrets/pki/ if that does better rotation?
  # This is an issue: https://cert-manager.io/docs/configuration/ca/#important-information
  # The certificate can outlive the root-ca. And cert-manager doesn't check that when issuing the cert.
  # Use very short livetimes here to mitigate for a while...
  duration: 2160h # 90d
  renewBefore: 720h # 30d
  dnsNames:
    - "minio.minio-tenant"
    - "minio.minio-tenant.svc"
    - 'minio.minio-tenant.svc.cluster.local'
    - '*.minio.minio-tenant.svc.cluster.local'
    - '*.myminio-hl.minio-tenant.svc.cluster.local'
    - '*.myminio.minio.minio-tenant.svc.cluster.local'
  secretName: myminio-tls
  issuerRef:
    name: tenant-1-ca-issuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: tenant-service-cert
  namespace: minio-tenant
spec:
  dnsNames:
    - "s3.nue.felix-prasse.de"
  secretName: myminio-service-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer