apiVersion: v1
kind: Namespace
metadata:
  name: minio-tenant
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: storage-configuration
  namespace: minio-tenant
spec:
  encryptedData:
    config.env: AgBE838YRpoDzIIKSRquM9TeaTrrKwminZMWFCrO3j11wl48QlzqhP9QPTjhnD73m69NPk8b1pWbF/WdiIOVGce0e+HwMVfDyXpLpq5MIT2JeXBjm414Ko1hv09ddDLCrMhzct58slfNJYhsgkz4M0dNSBsq57fCpW/+BX/OCX1Qi23ZDEycDOfJBiCrXh2jmoeQ9rrAuF+3/ggewh0ygANiHFsI2j80N52QP8otI6qY65zqqC1wKgcFFqJvE25iVb1scn8Z6m2dTCok5aSB7FwJyswzRGmz/OSoXBovbOPk3WtcHxqFWjyLbRDaCAyP4qHeWdyiFHl/qcgAWcby7EGEMl1qqi+1sjTd73kR6ZEO8EobV8ApHM96kPq/CH2VJ49XKZt5X+A5PyAZo3GYupt7GEiS2vwtZxe23APl0/C3VcNgItMoo60DrkpgpH9f1EqiO98OWMYtJV3SqaPbWZYBfv7CfjoLhLc8EcpyhqU/lJ7XwZtTTnB6YSPOnGzOjv3n7A1JONBKlKV1+JuVJ3BVZxqJ9A0pp8oe0i5IBe4/m3lDbCQ+qm8v+swsu2Na1l7ft673fwuuiUE4t31KDYqkqeR8TuCEihtFHmpr5pyhxS0pADeq4npIx04W5YBzWLb8bcW2RVzP/AtD+5aV5w0FiCACB5KMSAFwlajyxr6FBSr8+XY8/b0vnoES6+5VnXnZNJl8bcMHSoFjdiK8zpWKF70TAdf9tETAVschPOEsuqx+xUiyswOFE1JBxZpndRNVoxxp0Ag+ETBDc9QeSeCrz5Vl9TZctN+E6gF1mvrdzbcygnUEEbbPn2L5eLGbvxhF276Cn+cbQWYvTpPmH0TX0XydjGkyJCgR3UBzyGhEqtxAJ6FkE9nMz8vdDiMUF8Fwp+oVvg==
  template:
    metadata:
      name: storage-configuration
      namespace: minio-tenant

---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: velero-user
  namespace: minio-tenant
spec:
  encryptedData:
    CONSOLE_ACCESS_KEY: AgAwIMWJXRq0UYa5nrH/jRvnK5XfLp12NAyF7b0j9qvYRouCTCliqy6MDXCzmI1bCk8R4Du9/PTInZby7QQcXbx1mKtX9zewb6c6Sa/3Pm/IVf8oXjtbEu7kvVOHIBYoSA1zgY+FGL3wpaYV+Llkq+NZY3h28jSJiEXzgI0bgIk2hYBzDPZ9Oyis+Nbag6BnFOGSy3UL+uUckAlEyHql781a7KEJh6iGf3MkpLuLVBNbWbuO6Ut5MIs2wJe61k9Psgjj3G4rkA6Q8N8xSd6vsPxQYAXBBMsZV3oGyAirEeMKuRCO4fDv/KWpzCCexcR7RmGlJGmR/bHl8jI8krgwg3pxCHnHT8X6rgy7p22S6O0EVEX3SEp44W3X2eXRuRBxENUx/ieG7aYJuj1D2no/ELyVpOaX7L15Q2ce4pV6X+pXow5TH23GAB98TH3dFijg2hJHDl4Kgr2ZcHD32mhiBpkyxqmXvYPtZwwatqPfnqFKNSYvg79xIP06dxvGdMpV7VxU/cvZRk4xxtWiX+9xNuHz03cpcihIeFLmBje/2xRPo50J3R39AxYGU2ArAia0JjiyleHwmjK59XEmA/9At1uhnGYv9Ns48rFqqBe5eVNQwt6+9IYhUJt8h1OnzEyC3ipsxs97imczTLOncmm7g8GKoaRO1SLU/vaBtiP0HRPd7uUqy/GAnwbGh4zf2AjD687lp6G5LkI=
    CONSOLE_SECRET_KEY: AgBCS5FY+ezStkhUEAiuBuPTF24SgbVnf6ccSlOUINMaLM4DmDTk0EJ5cR7zzP1TQv+eabIZXTmPzdRpQtqsEFskzvAQZf6mlb/Lljr7whpBKBHrcIEBK80T0zvwmoV5XAwRFJPiMNU1NSei71PwsglNKv7QzclHrs8ymOjwHfWz4I8Uz2byPupE9li6XSjW04dh1uk+1AC214ksRmUStwqoq4NWMAegnFQrcSV8BEzMDPs/Pkzj+U4SNTL2ULTfVu+PMK+NrrwgWC8KNQ9/kBzd7dctKmoDinRYEtjKJ2LJCyYcCNAHngFPFr6EKGlRASOZ37WTYxcuJL4GbmjH7o1AR3F8uw65DDif3iSSYbSUNNFdlZxuEe3B48XmqXBLoRQ/2Qhc6xxq28tIMXCwINUuYk1m8bPPwM185Cp88BsSEnZXjcpPMKkVugL4503rLxaWAozLIzH2KD6a+RjlbdnKDwbeNX1WBH+klKjjYJi6CVdxdVrAeF6DAQBBkZC/8ELWeRgsTHHkTiphkb9sBR8GJ7eFrSGhwLell3mWurs/gUKuDahOQTgciJpR89e74takVm++Z6OcEUWu/95hiHZfR4pGJe3bHoLBhHssgnJgzMKzrewj2OFZtdbFTXtfyRNbxfQIPAfq01BH3kp+Z5Un8uBpy1ubrFeVhhxP1Gl/vfi95cZ2za5Cm0bXFJPfthv8R/von0w8jHJ+y0f4TvrNDNbQNg==
  template:
    metadata:
      name: velero-user
      namespace: minio-tenant
---
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"
  labels:
    app: minio
  name: myminio
  namespace: minio-tenant
spec:
  certConfig: {}
  configuration:
    name: storage-configuration
  env: []
  externalCaCertSecret: []
  externalCertSecret: []
  externalClientCertSecrets: []
  features:
    bucketDNS: false
    domains: {}
  image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
  imagePullSecret: {}
  mountPath: /export
  podManagementPolicy: Parallel
  pools:
    - affinity:
        nodeAffinity: {}
        podAffinity: {}
        podAntiAffinity: {}
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      name: pool-0
      nodeSelector: {}
      resources: {}
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      servers: 1
      tolerations: []
      topologySpreadConstraints: []
      volumeClaimTemplate:
        apiVersion: v1
        kind: persistentvolumeclaims
        metadata: {}
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Ti
          storageClassName: zfs-generic-nfs-csi
        status: {}
      volumesPerServer: 1
  priorityClassName: ""
  requestAutoCert: true
  serviceAccountName: ""
  serviceMetadata:
    consoleServiceAnnotations: {}
    consoleServiceLabels: {}
    minioServiceAnnotations: {}
    minioServiceLabels: {}
  subPath: ""
  users:
    - name: velero-user
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-console
  namespace: minio-tenant
  annotations:
    ## Remove if using CA signed certificate
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    #nginx.ingress.kubernetes.io/server-snippet: |
    #  client_max_body_size 0;
    #nginx.ingress.kubernetes.io/configuration-snippet: |
    #  chunked_transfer_encoding off;
    cert-manager.io/cluster-issuer: selfsigned-root
spec:
  ingressClassName: internal-nginx
  tls:
    - hosts:
        - console.minio.home.arpa
  rules:
    - host: console.minio.home.arpa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: myminio-console
                port:
                  number: 9443